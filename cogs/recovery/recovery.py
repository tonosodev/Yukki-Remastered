import asyncio
import os
import sys

import discord
from discord.ext import commands
from config import commands_permission, bot_initialize, bot_settings, user_report_reaction_permission_owner, \
    recovery_reaction_permission_head_tech, server_roles


class RecoveryCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command()
    @commands.has_any_role(*commands_permission['recovery_command_permission'])
    async def recovery(self, ctx):
        system_log = self.bot.get_channel(bot_settings['system_log_channel'])
        await ctx.message.delete()

        member = discord.Member = "641398600727003197"
        embed_recovery = discord.Embed(title=f"{self.bot.user.name} | Control Panel")
        embed_recovery.set_thumbnail(url=self.bot.user.avatar_url)

        embed_recovery.add_field(name='WARNING:',
                                 value="Make sure you are going to make the right choice of action before use.\n"
                                       "**Attention!**\n"
                                       "*protocol: Self-Destruction was created in case of 'hopelessness'.* \n"
                                       "*Don't forget - this will destroy the entire project...*",
                                 inline=False)
        embed_recovery.add_field(name='Select action:', value=f'‚≠ï __**Reload**__\n'
                                                              f'‚ùå __**Shutdown**__\n'
                                                              f'========================\n'
                                                              f'‚ô¶ __**Recovery**__\n'
                                                              f'========================\n'
                                                              f'üí• __**protocol: Self-Destruction**__', inline=False)
        embed_recovery.set_footer(text=f'{self.bot.user.name}' + bot_initialize['embeds_footer_message'],
                                  icon_url=self.bot.user.avatar_url)
        msg = await ctx.send(embed=embed_recovery)
        await msg.add_reaction("‚≠ï")
        await msg.add_reaction("‚ùå")
        await msg.add_reaction("‚ô¶")
        await msg.add_reaction("üí•")

        try:
            reaction, user = await self.bot.wait_for('reaction_add', timeout=60.0, check=lambda react, user:  user.id == ctx.author.id and react.message.id == msg.id and str(
                react.emoji) in ["‚≠ï", "‚ùå", "‚ô¶", "üí•"])
        except asyncio.TimeoutError:
            return await msg.clear_reactions()

            #
            # RELOAD REACTION
            #

        if str(reaction.emoji) == "‚≠ï":
            embed_reload = discord.Embed(title=f"{self.bot.user.name} | Control Panel")
            embed_reload.set_thumbnail(url=self.bot.user.avatar_url)
            embed_reload.add_field(name="‚≠ï __**Reload**__", value=f"{ctx.author.mention}, –Ω–∞—á–∏–Ω–∞—é –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ . . .")
            embed_reload.set_footer(text=f'{self.bot.user.name}' + bot_initialize['embeds_footer_message'],
                                    icon_url=self.bot.user.avatar_url)

            embed_reload_complete = discord.Embed(title=f"{self.bot.user.name} | Control Panel")
            embed_reload_complete.set_thumbnail(url=ctx.author.avatar_url)
            embed_reload_complete.add_field(name="‚≠ï __**Reload**__",
                                            value=f"{ctx.author.mention}, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω!", inline=False)
            embed_reload_complete.add_field(name="__**–°–æ–≤–µ—Ç**__:", value="–¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –ø—Ä–æ–≤–µ—Ä—å—Ç–µ ¬´–ñ—É—Ä–Ω–∞–ª –°–∏—Å—Ç–µ–º—ã¬ª.",
                                            inline=False)
            embed_reload_complete.set_footer(text=f'{self.bot.user.name}' + bot_initialize['embeds_footer_message'],
                                             icon_url=self.bot.user.avatar_url)

            await msg.edit(embed=embed_reload)
            await msg.clear_reactions()
            embed_reloading = discord.Embed(
                title="–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫. . .",
                color=0x808080,
                timestamp=ctx.message.created_at
            )
            for filename in os.listdir("./cogs/administration_commands"):
                if filename.endswith(".py") and not filename.startswith("_"):
                    try:

                        self.bot.unload_extension(f'cogs.administration_commands.{filename[:-3]}')
                        self.bot.load_extension(f'cogs.administration_commands.{filename[:-3]}')
                        embed_reloading.add_field(
                            name=f"[administration_commands] –ü–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ: {filename}",
                            value=f'`{filename}`',
                            inline=False
                        )
                    except Exception as e:
                        embed_reloading.add_field(
                            name=f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: `{filename}`",
                            value=str(e),
                            inline=False
                        )
                    await asyncio.sleep(0.5)

            for filename in os.listdir("./cogs/commands"):
                if filename.endswith(".py") and not filename.startswith("_"):
                    try:
                        self.bot.unload_extension(f"cogs.commands.{filename[:-3]}")
                        self.bot.load_extension(f"cogs.commands.{filename[:-3]}")
                        embed_reloading.add_field(
                            name=f"[commands] –ü–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ:",
                            value=f'`{filename}`',
                            inline=False
                        )
                    except Exception as e:
                        embed_reloading.add_field(
                            name=f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: `{filename}`",
                            value=str(e),
                            inline=False
                        )
                    await asyncio.sleep(0.5)

            for filename in os.listdir("./cogs/events"):
                if filename.endswith(".py") and not filename.startswith("_"):
                    try:
                        self.bot.unload_extension(f'cogs.events.{filename[:-3]}')
                        self.bot.load_extension(f'cogs.events.{filename[:-3]}')
                        embed_reloading.add_field(
                            name=f"[events] –ü–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ:",
                            value=f'`{filename}`',
                            inline=False
                        )
                    except Exception as e:
                        embed_reloading.add_field(
                            name=f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: `{filename}`",
                            value=str(e),
                            inline=False
                        )
                    await asyncio.sleep(0.5)

            for filename in os.listdir("./cogs/economy"):
                if filename.endswith(".py") and not filename.startswith("_"):
                    try:
                        self.bot.unload_extension(f'cogs.economy.{filename[:-3]}')
                        self.bot.load_extension(f'cogs.economy.{filename[:-3]}')
                        embed_reloading.add_field(
                            name=f"[economy] –ü–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ:",
                            value=f'`{filename}`',
                            inline=False
                        )
                    except Exception as e:
                        embed_reloading.add_field(
                            name=f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: `{filename}`",
                            value=str(e),
                            inline=False
                        )
                    await asyncio.sleep(0.5)

            for filename in os.listdir("./cogs/development"):
                if filename.endswith(".py") and not filename.startswith("_"):
                    try:
                        self.bot.unload_extension(f'cogs.development.{filename[:-3]}')
                        self.bot.load_extension(f'cogs.development.{filename[:-3]}')
                        embed_reloading.add_field(
                            name=f"[development] –ü–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ:",
                            value=f'`{filename}`',
                            inline=False
                        )
                    except Exception as e:
                        embed_reloading.add_field(
                            name=f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: `{filename}`",
                            value=str(e),
                            inline=False
                        )
                    await asyncio.sleep(0.5)

            for filename in os.listdir("./cogs/phrases"):
                if filename.endswith(".py") and not filename.startswith("_"):
                    try:
                        self.bot.unload_extension(f'cogs.phrases.{filename[:-3]}')
                        self.bot.load_extension(f'cogs.phrases.{filename[:-3]}')
                        embed_reloading.add_field(
                            name=f"[phrases] –ü–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ:",
                            value=f'`{filename}`',
                            inline=False
                        )
                    except Exception as e:
                        embed_reloading.add_field(
                            name=f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: `{filename}`",
                            value=str(e),
                            inline=False
                        )
                    await asyncio.sleep(0.5)

            for filename in os.listdir("./cogs/recovery"):
                if filename.endswith(".py") and not filename.startswith("_"):
                    try:
                        self.bot.unload_extension(f'cogs.recovery.{filename[:-3]}')
                        self.bot.load_extension(f'cogs.recovery.{filename[:-3]}')
                        embed_reloading.add_field(
                            name=f"[recovery] –ü–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ:",
                            value=f'`{filename}`',
                            inline=False
                        )
                    except Exception as e:
                        embed_reloading.add_field(
                            name=f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: `{filename}`",
                            value=str(e),
                            inline=False
                        )
                    await asyncio.sleep(0.5)
            await msg.edit(embed=embed_reload_complete, delete_after=15)
            print("\n[RECOVERY] System has been reloaded!\n")
            await system_log.send(embed=embed_reloading)

            #
            # SHUTDOWN REACTION
            #

        elif str(reaction.emoji) == "‚ùå":
            embed_shutdown = discord.Embed(title=f"{self.bot.user.name} | Control Panel")
            embed_shutdown.set_thumbnail(url=self.bot.user.avatar_url)
            embed_shutdown.add_field(name="‚ùå __**Shutdown**__",
                                     value=f"{ctx.author.mention}, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã . . .\n–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –≤ —Ä—É—á–Ω–æ–º —Ä–µ–∂–∏–º–µ.")
            embed_shutdown.set_footer(text=f'{self.bot.user.name}' + bot_initialize['embeds_footer_message'],
                                      icon_url=self.bot.user.avatar_url)

            await msg.edit(embed=embed_shutdown)
            await msg.clear_reactions()

            embed_shutdown = discord.Embed(
                title="–Æ–∫–∫–∏ —É—Å–ø–µ—à–Ω–æ —É—à–ª–∞ —Å–ø–∞—Ç–∫–∏!",
                description="–ù—É –≤—Å—ë, —Ç–µ–ø–µ—Ä—å –∑–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ —Ä—É—á–∫–∞–º–∏...",
                color=0x808080,
                timestamp=ctx.message.created_at
            )
            await system_log.send(embed=embed_shutdown)
            sys.exit(0)

            #
            # RECOVERY REACTION
            #

        elif str(reaction.emoji) == "‚ô¶":
            embed_recovery = discord.Embed(title=f"{self.bot.user.name} | Control Panel")
            embed_recovery.set_thumbnail(url=self.bot.user.avatar_url)
            embed_recovery.add_field(name="‚ô¶ __**Recovery**__",
                                     value=f"{ctx.author.mention}, –Ω–∞—á–∞–ª—Å—è –ø—Ä–æ—Ü–µ—Å—Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã. . .")
            embed_recovery.set_footer(text=f'{self.bot.user.name}' + bot_initialize['embeds_footer_message'],
                                      icon_url=self.bot.user.avatar_url)

            embed_recovery_complete = discord.Embed(title=f"{self.bot.user.name} | Control Panel")
            embed_recovery_complete.set_thumbnail(url=ctx.author.avatar_url)
            embed_recovery_complete.add_field(name="‚ô¶ __**Recovery**__",
                                              value=f"{ctx.author.mention}, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!", inline=False)
            embed_recovery_complete.add_field(name="__**–°–æ–≤–µ—Ç**__:",
                                              value="–¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –ø—Ä–æ–≤–µ—Ä—å—Ç–µ ¬´–ñ—É—Ä–Ω–∞–ª –°–∏—Å—Ç–µ–º—ã¬ª.",
                                              inline=False)
            embed_recovery_complete.set_footer(text=f'{self.bot.user.name}' + bot_initialize['embeds_footer_message'],
                                               icon_url=self.bot.user.avatar_url)

            await msg.edit(embed=embed_recovery)
            await msg.clear_reactions()

            embed_recovering = discord.Embed(
                title="–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã . . .",
                description="–§–∞–π–ª config.py —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!",
                color=0x808080,
                timestamp=ctx.message.created_at
            )
            await system_log.send(embed=embed_recovering)

            #
            # PROTOCOL REACTION
            #

        elif str(reaction.emoji) == "üí•":
            await msg.clear_reactions()
            embed_protocol = discord.Embed(title=f"{self.bot.user.name} | Control Panel")
            embed_protocol.set_thumbnail(url=self.bot.user.avatar_url)
            embed_protocol.add_field(name="üí• __**protocol: Self-Destruction**__",
                                     value=f"{ctx.author.mention}, –Ω–∞—á–∞–ª—Å—è –ø—Ä–æ—Ü–µ—Å—Å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è 'protocol: Self-Destruction'...")
            embed_protocol.set_footer(text=f'{self.bot.user.name}' + bot_initialize['embeds_footer_message'],
                                      icon_url=self.bot.user.avatar_url)
            await msg.edit(embed=embed_protocol)
            await asyncio.sleep(3)
            embed_protocol_github_delete = discord.Embed(title=f"{self.bot.user.name} | Control Panel")
            embed_protocol_github_delete.set_thumbnail(url=self.bot.user.avatar_url)
            embed_protocol_github_delete.add_field(name="üí• __**protocol: Self-Destruction**__",
                                                   value=f"–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ GitHub...")
            embed_protocol_github_delete.set_footer(
                text=f'{self.bot.user.name}' + bot_initialize['embeds_footer_message'],
                icon_url=self.bot.user.avatar_url)
            await msg.edit(embed=embed_protocol_github_delete)
            await asyncio.sleep(8)
            embed_protocol_github_delete_complete = discord.Embed(title=f"{self.bot.user.name} | Control Panel")
            embed_protocol_github_delete_complete.set_thumbnail(url=self.bot.user.avatar_url)
            embed_protocol_github_delete_complete.add_field(name="üí• __**protocol: Self-Destruction**__",
                                                            value=f"–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ GitHub...\n–£—Å–ø–µ—à–Ω–æ!")
            embed_protocol_github_delete_complete.set_footer(
                text=f'{self.bot.user.name}' + bot_initialize['embeds_footer_message'],
                icon_url=self.bot.user.avatar_url)
            await msg.edit(embed=embed_protocol_github_delete_complete)
            await asyncio.sleep(3)
            embed_protocol_yukki_directory_delete = discord.Embed(title=f"{self.bot.user.name} | Control Panel")
            embed_protocol_yukki_directory_delete.set_thumbnail(url=self.bot.user.avatar_url)
            embed_protocol_yukki_directory_delete.add_field(name="üí• __**protocol: Self-Destruction**__",
                                                            value=f"–£–¥–∞–ª–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ./cogs –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞...")
            embed_protocol_yukki_directory_delete.set_footer(
                text=f'{self.bot.user.name}' + bot_initialize['embeds_footer_message'],
                icon_url=self.bot.user.avatar_url)
            await msg.edit(embed=embed_protocol_yukki_directory_delete)
            await asyncio.sleep(6)
            embed_protocol_yukki_directory_delete_complete = discord.Embed(
                title=f"{self.bot.user.name} | Control Panel")
            embed_protocol_yukki_directory_delete_complete.set_thumbnail(url=self.bot.user.avatar_url)
            embed_protocol_yukki_directory_delete_complete.add_field(name="üí• __**protocol: Self-Destruction**__",
                                                                     value=f"–£–¥–∞–ª–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ./cogs –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞...\n–£—Å–ø–µ—à–Ω–æ!")
            embed_protocol_yukki_directory_delete_complete.set_footer(
                text=f'{self.bot.user.name}' + bot_initialize['embeds_footer_message'],
                icon_url=self.bot.user.avatar_url)
            await msg.edit(embed=embed_protocol_yukki_directory_delete_complete)
            await asyncio.sleep(3)
            embed_protocol_shutdown = discord.Embed(
                title=f"{self.bot.user.name} | Control Panel")
            embed_protocol_shutdown.set_thumbnail(url=self.bot.user.avatar_url)
            embed_protocol_shutdown.add_field(name="üí• __**protocol: Self-Destruction**__",
                                              value=f"–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º —Ñ–∞–π–ª–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...")
            embed_protocol_shutdown.set_footer(
                text=f'{self.bot.user.name}' + bot_initialize['embeds_footer_message'],
                icon_url=self.bot.user.avatar_url)
            await msg.edit(embed=embed_protocol_shutdown)
            await asyncio.sleep(5)
            embed_protocol_shutdown_complete = discord.Embed(
                title=f"{self.bot.user.name} | Control Panel")
            embed_protocol_shutdown_complete.set_thumbnail(url=self.bot.user.avatar_url)
            embed_protocol_shutdown_complete.add_field(name="üí• __**protocol: Self-Destruction**__",
                                                       value=f"–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º —Ñ–∞–π–ª–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...\n–£—Å–ø–µ—à–Ω–æ!")
            embed_protocol_shutdown_complete.set_footer(
                text=f'{self.bot.user.name}' + bot_initialize['embeds_footer_message'],
                icon_url=self.bot.user.avatar_url)
            await msg.edit(embed=embed_protocol_shutdown_complete)
            await asyncio.sleep(3)
            embed_protocol_data_send = discord.Embed(
                title=f"{self.bot.user.name} | Control Panel")
            embed_protocol_data_send.set_thumbnail(url=self.bot.user.avatar_url)
            embed_protocol_data_send.add_field(name="üí• __**protocol: Self-Destruction**__",
                                               value=f"–ö—ç—à–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Ä–µ—à–µ–Ω–∏—è —Å–Ω—è—Ç–∏—è –í–∞—à–µ–π —É–ø—Ä–∞–≤–ª—è—é—â–µ–π —Ä–æ–ª–∏...\n–í–ø—Ä–æ—á–µ–º, —Å–¥–µ–ª–∞—é —ç—Ç–æ —Å–∞–º–∞.")
            embed_protocol_data_send.set_footer(
                text=f'{self.bot.user.name}' + bot_initialize['embeds_footer_message'],
                icon_url=self.bot.user.avatar_url)
            await msg.edit(embed=embed_protocol_data_send)

            head_tech_guild_role = discord.utils.get(user.guild.roles, id=server_roles['tech.support_role'])
            try:
                await user.remove_roles(head_tech_guild_role)
                print(f"[RECOVERY] –° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user} –±—ã–ª–∞ —Å–Ω—è—Ç–∞ —Ä–æ–ª—å {head_tech_guild_role}")
            except:
                print(f"[RECOVERY] –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–Ω—è—Ç—å —Ä–æ–ª—å {head_tech_guild_role} —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user}.")

            await ctx.guild.owner.send(
                f"{user.mention} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –ø—Ä–æ—Ç–æ–∫–æ–ª —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –Æ–∫–∫–∏.\n–î–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–Ω—è—Ç–∞ —Ä–æ–ª—å.")
            await asyncio.sleep(10)

            embed_protocol_goodbye = discord.Embed(
                title=f"{self.bot.user.name} | Control Panel")
            embed_protocol_goodbye.set_thumbnail(url=self.bot.user.avatar_url)
            embed_protocol_goodbye.add_field(name="üí• __**protocol: Self-Destruction**__",
                                             value=f"{user.mention} –µ—â–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—ã–ª —Ç–∞–∫ –±–ª–∏–∑–∫–æ –∫ —Å–æ–≤–µ—Ä—à–µ–Ω–∏—é –≥–ª—É–ø–æ—Å—Ç–∏, –∫–∞–∫ –≤ —ç—Ç–æ—Ç —Ä–∞–∑ <:admin_face:769707992891129897>\n–ü—Ä–æ—Ç–æ–∫–æ–ª —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω.\n`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ª–∏—Ü.`")
            embed_protocol_goodbye.set_footer(
                text=f'{self.bot.user.name}' + bot_initialize['embeds_footer_message'],
                icon_url=self.bot.user.avatar_url)
            await msg.edit(embed=embed_protocol_goodbye)
            await asyncio.sleep(10)
            await msg.delete()
        ############################################################################################################


def setup(bot):
    bot.add_cog(RecoveryCog(bot))
